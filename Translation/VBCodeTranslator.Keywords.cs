/* ------------------------------------------------------------------------\
|  This code was partially generated by Oilexer.     |
|  Version: 1.0.0.0                                                        |
|--------------------------------------------------------------------------|
|  To ensure the code works properly,                                      |
|  please do not make any changes to the file.                             |
|--------------------------------------------------------------------------|
|  The specific language is C# (Runtime version: v2.0.50727)               |
|  Sub-tool Name: Oilexer.CSharpCodeTranslator       |
|  Sub-tool Version: 1.0.0.0                                               |
\------------------------------------------------------------------------ */

using System.Collections.Generic;
using System;
using Oilexer.Utilities.Collections;
namespace Oilexer.Translation
{
    #region Oilexer nested types
    partial class VBCodeTranslator
    {
        #region VBCodeTranslator Data members
        internal static readonly ReadOnlyDictionary<Type, Keywords> VBAutoFormTypeLookup;
        #endregion

        #region VBCodeTranslator Methods

        private static ReadOnlyDictionary<Type, Keywords> InitializeVBAutoFormTypeLookup()
        {
            //Create a lookup for integral type-name translation from (as an example)
            //'System.Float' to 'Single'
            Dictionary<Type, Keywords> resultToWrap = new Dictionary<Type, Keywords>();
            resultToWrap.Add(typeof(byte), Keywords.Byte);
            resultToWrap.Add(typeof(sbyte), Keywords.SByte);
            resultToWrap.Add(typeof(ushort), Keywords.UShort);
            resultToWrap.Add(typeof(short), Keywords.Short);
            resultToWrap.Add(typeof(uint), Keywords.UInteger);
            resultToWrap.Add(typeof(int), Keywords.Integer);
            resultToWrap.Add(typeof(ulong), Keywords.ULong);
            resultToWrap.Add(typeof(long), Keywords.Long);
            //resultToWrap.Add(typeof(void), Keywords.Void);
            resultToWrap.Add(typeof(bool), Keywords.Boolean);
            resultToWrap.Add(typeof(char), Keywords.Char);
            resultToWrap.Add(typeof(decimal), Keywords.Decimal);
            resultToWrap.Add(typeof(float), Keywords.Single);
            resultToWrap.Add(typeof(double), Keywords.Double);
            resultToWrap.Add(typeof(object), Keywords.Object);
            resultToWrap.Add(typeof(string), Keywords.String);
            return new ReadOnlyDictionary<Type, Keywords>(resultToWrap);
        }

        #endregion

        #region VBCodeTranslator nested types
        public enum Keywords
        {
            /// <summary>
            /// No operation.
            /// </summary>
            NoOp = 0,

            /// <summary>
            /// VB Keyword for "As" which is 2 characters long.
            /// </summary>
            As = -839403585, 
            
            /// <summary>
            /// VB Keyword for "Do" which is 2 characters long.
            /// </summary>
            Do = -840190020, 
            
            /// <summary>
            /// VB Keyword for "If" which is 2 characters long.
            /// </summary>
            If = -840648761, 
            
            /// <summary>
            /// VB Keyword for "In" which is 2 characters long.
            /// </summary>
            In = -840124473, 
            
            /// <summary>
            /// VB Keyword for "Is" which is 2 characters long.
            /// </summary>
            Is = -839403577, 
            
            /// <summary>
            /// VB Keyword for "Me" which is 2 characters long.
            /// </summary>
            Me = -840583229, 
            
            /// <summary>
            /// VB Keyword for "Of" which is 2 characters long.
            /// </summary>
            Of = -840648767, 
            
            /// <summary>
            /// VB Keyword for "On" which is 2 characters long.
            /// </summary>
            On = -840124479, 
            
            /// <summary>
            /// VB Keyword for "Or" which is 2 characters long.
            /// </summary>
            Or = -839338047, 
            
            /// <summary>
            /// VB Keyword for "To" which is 2 characters long.
            /// </summary>
            To = -840190004, 
            
            /// <summary>
            /// VB Keyword for "And" which is 3 characters long.
            /// </summary>
            And = -1028830027, 
            
            /// <summary>
            /// VB Keyword for "Dim" which is 3 characters long.
            /// </summary>
            Dim = 1344150645, 
            
            /// <summary>
            /// VB Keyword for "End" which is 3 characters long.
            /// </summary>
            End = -1028830031, 
            
            /// <summary>
            /// VB Keyword for "For" which is 3 characters long.
            /// </summary>
            For = 1390811594, 
            
            /// <summary>
            /// VB Keyword for "Get" which is 3 characters long.
            /// </summary>
            Get = -1741749505, 
            
            /// <summary>
            /// VB Keyword for "Let" which is 3 characters long.
            /// </summary>
            Let = -1741749494, 
            
            /// <summary>
            /// VB Keyword for "Lib" which is 3 characters long.
            /// </summary>
            Lib = 2103665540, 
            
            /// <summary>
            /// VB Keyword for "Mod" which is 3 characters long.
            /// </summary>
            Mod = -1028895559, 
            
            /// <summary>
            /// VB Keyword for "New" which is 3 characters long.
            /// </summary>
            New = -2145034023, 
            
            /// <summary>
            /// VB Keyword for "Not" which is 3 characters long.
            /// </summary>
            Not = -1741356280, 
            
            /// <summary>
            /// VB Keyword for "Rem" which is 3 characters long.
            /// </summary>
            Rem = 1343364231, 
            
            /// <summary>
            /// VB Keyword for "Set" which is 3 characters long.
            /// </summary>
            Set = -1741749485, 
            
            /// <summary>
            /// VB Keyword for "Sub" which is 3 characters long.
            /// </summary>
            Sub = 2103927693, 
            
            /// <summary>
            /// VB Keyword for "Try" which is 3 characters long.
            /// </summary>
            Try = -1693450135, 
            
            /// <summary>
            /// VB Keyword for "XOr" which is 3 characters long.
            /// </summary>
            XOr = 1390811624, 
            
            /// <summary>
            /// VB Keyword for "Ansi" which is 4 characters long.
            /// </summary>
            Ansi = 837914218, 
            
            /// <summary>
            /// VB Keyword for "Auto" which is 4 characters long.
            /// </summary>
            Auto = -1874590971, 
            
            /// <summary>
            /// VB Keyword for "Byte" which is 4 characters long.
            /// </summary>
            Byte = 1274151684, 
            
            /// <summary>
            /// VB Keyword for "Call" which is 4 characters long.
            /// </summary>
            Call = 1201842139, 
            
            /// <summary>
            /// VB Keyword for "Case" which is 4 characters long.
            /// </summary>
            Case = -1456304536, 
            
            /// <summary>
            /// VB Keyword for "CDbl" which is 4 characters long.
            /// </summary>
            CDbl = 395076477, 
            
            /// <summary>
            /// VB Keyword for "CDec" which is 4 characters long.
            /// </summary>
            CDec = 801096014, 
            
            /// <summary>
            /// VB Keyword for "Char" which is 4 characters long.
            /// </summary>
            Char = -421335326, 
            
            /// <summary>
            /// VB Keyword for "CInt" which is 4 characters long.
            /// </summary>
            CInt = -400453359, 
            
            /// <summary>
            /// VB Keyword for "CLng" which is 4 characters long.
            /// </summary>
            CLng = -1885368047, 
            
            /// <summary>
            /// VB Keyword for "CObj" which is 4 characters long.
            /// </summary>
            CObj = 777741181, 
            
            /// <summary>
            /// VB Keyword for "CSng" which is 4 characters long.
            /// </summary>
            CSng = -1884778223, 
            
            /// <summary>
            /// VB Keyword for "CStr" which is 4 characters long.
            /// </summary>
            CStr = -1536752893, 
            
            /// <summary>
            /// VB Keyword for "Date" which is 4 characters long.
            /// </summary>
            Date = 1272578818, 
            
            /// <summary>
            /// VB Keyword for "Each" which is 4 characters long.
            /// </summary>
            Each = -406136810, 
            
            /// <summary>
            /// VB Keyword for "Else" which is 4 characters long.
            /// </summary>
            Else = -1455976858, 
            
            /// <summary>
            /// VB Keyword for "Enum" which is 4 characters long.
            /// </summary>
            Enum = 1236039580, 
            
            /// <summary>
            /// VB Keyword for "Exit" which is 4 characters long.
            /// </summary>
            Exit = -1158854136, 
            
            /// <summary>
            /// VB Keyword for "GoTo" which is 4 characters long.
            /// </summary>
            GoTo = -1875246337, 
            
            /// <summary>
            /// VB Keyword for "Like" which is 4 characters long.
            /// </summary>
            Like = -1099549881, 
            
            /// <summary>
            /// VB Keyword for "Long" which is 4 characters long.
            /// </summary>
            Long = -1885564648, 
            
            /// <summary>
            /// VB Keyword for "Loop" which is 4 characters long.
            /// </summary>
            Loop = -1202256461, 
            
            /// <summary>
            /// VB Keyword for "Next" which is 4 characters long.
            /// </summary>
            Next = -307131452, 
            
            /// <summary>
            /// VB Keyword for "Step" which is 4 characters long.
            /// </summary>
            Step = -2008104610, 
            
            /// <summary>
            /// VB Keyword for "Stop" which is 4 characters long.
            /// </summary>
            Stop = -1201535556, 
            
            /// <summary>
            /// VB Keyword for "Then" which is 4 characters long.
            /// </summary>
            Then = -389758627, 
            
            /// <summary>
            /// VB Keyword for "True" which is 4 characters long.
            /// </summary>
            True = -292522067, 
            
            /// <summary>
            /// VB Keyword for "Wend" which is 4 characters long.
            /// </summary>
            Wend = 835031325, 
            
            /// <summary>
            /// VB Keyword for "When" which is 4 characters long.
            /// </summary>
            When = -389758630, 
            
            /// <summary>
            /// VB Keyword for "With" which is 4 characters long.
            /// </summary>
            With = 1610810127, 
            
            /// <summary>
            /// VB Keyword for "Alias" which is 5 characters long.
            /// </summary>
            Alias = 1613693525, 
            
            /// <summary>
            /// VB Keyword for "ByRef" which is 5 characters long.
            /// </summary>
            ByRef = -1032203706, 
            
            /// <summary>
            /// VB Keyword for "ByVal" which is 5 characters long.
            /// </summary>
            ByVal = 2058069164, 
            
            /// <summary>
            /// VB Keyword for "Catch" which is 5 characters long.
            /// </summary>
            Catch = 461028241, 
            
            /// <summary>
            /// VB Keyword for "CBool" which is 5 characters long.
            /// </summary>
            CBool = 1176485438, 
            
            /// <summary>
            /// VB Keyword for "CByte" which is 5 characters long.
            /// </summary>
            CByte = 1225963765, 
            
            /// <summary>
            /// VB Keyword for "CChar" which is 5 characters long.
            /// </summary>
            CChar = -1130328589, 
            
            /// <summary>
            /// VB Keyword for "CDate" which is 5 characters long.
            /// </summary>
            CDate = -2004637827, 
            
            /// <summary>
            /// VB Keyword for "Class" which is 5 characters long.
            /// </summary>
            Class = 351315815, 
            
            /// <summary>
            /// VB Keyword for "Const" which is 5 characters long.
            /// </summary>
            Const = 748112283, 
            
            /// <summary>
            /// VB Keyword for "CType" which is 5 characters long.
            /// </summary>
            CType = 2020915445, 
            
            /// <summary>
            /// VB Keyword for "CUInt" which is 5 characters long.
            /// </summary>
            CUInt = 54854292, 
            
            /// <summary>
            /// VB Keyword for "CULng" which is 5 characters long.
            /// </summary>
            CULng = -348430220, 
            
            /// <summary>
            /// VB Keyword for "EndIf" which is 5 characters long.
            /// </summary>
            EndIf = -1203305331, 
            
            /// <summary>
            /// VB Keyword for "Erase" which is 5 characters long.
            /// </summary>
            Erase = 372942523, 
            
            /// <summary>
            /// VB Keyword for "Error" which is 5 characters long.
            /// </summary>
            Error = 95342995, 
            
            /// <summary>
            /// VB Keyword for "Event" which is 5 characters long.
            /// </summary>
            Event = -1560446698, 
            
            /// <summary>
            /// VB Keyword for "False" which is 5 characters long.
            /// </summary>
            False = -419012663, 
            
            /// <summary>
            /// VB Keyword for "GoSub" which is 5 characters long.
            /// </summary>
            GoSub = 412829304, 
            
            /// <summary>
            /// VB Keyword for "IsNot" which is 5 characters long.
            /// </summary>
            IsNot = -1519957187, 
            
            /// <summary>
            /// VB Keyword for "ReDim" which is 5 characters long.
            /// </summary>
            ReDim = -1218443531, 
            
            /// <summary>
            /// VB Keyword for "SByte" which is 5 characters long.
            /// </summary>
            SByte = 1225964229, 
            
            /// <summary>
            /// VB Keyword for "Short" which is 5 characters long.
            /// </summary>
            Short = 1535819814, 
            
            /// <summary>
            /// VB Keyword for "Throw" which is 5 characters long.
            /// </summary>
            Throw = 82367591, 
            
            /// <summary>
            /// VB Keyword for "ULong" which is 5 characters long.
            /// </summary>
            ULong = -766853033, 
            
            /// <summary>
            /// VB Keyword for "Until" which is 5 characters long.
            /// </summary>
            Until = -1915765341, 
            
            /// <summary>
            /// VB Keyword for "Using" which is 5 characters long.
            /// </summary>
            Using = 59180213, 
            
            /// <summary>
            /// VB Keyword for "While" which is 5 characters long.
            /// </summary>
            While = 430703593,

            /// <summary>
            /// VB Keyword for "CSByte" which is 6 characters long.
            /// </summary>
            CSByte = 710286343,

            /// <summary>
            /// VB Keyword for "CShort" which is 6 characters long.
            /// </summary>
            CShort = -718369293,

            /// <summary>
            /// VB Keyword for "Double" which is 6 characters long.
            /// </summary>
            Double = 1235497039,

            /// <summary>
            /// VB Keyword for "ElseIf" which is 6 characters long.
            /// </summary>
            ElseIf = 1653622325,

            /// <summary>
            /// VB Keyword for "Friend" which is 6 characters long.
            /// </summary>
            Friend = 876675583,

            /// <summary>
            /// VB Keyword for "Global" which is 6 characters long.
            /// </summary>
            Global = -1532838465,

            /// <summary>
            /// VB Keyword for "Module" which is 6 characters long.
            /// </summary>
            Module = -443218341,

            /// <summary>
            /// VB Keyword for "MyBase" which is 6 characters long.
            /// </summary>
            MyBase = 446700844,

            /// <summary>
            /// VB Keyword for "Object" which is 6 characters long.
            /// </summary>
            Object = -737642562,

            /// <summary>
            /// VB Keyword for "Option" which is 6 characters long.
            /// </summary>
            Option = -1888502768,

            /// <summary>
            /// VB Keyword for "OrElse" which is 6 characters long.
            /// </summary>
            OrElse = -1163363753,

            /// <summary>
            /// VB Keyword for "Public" which is 6 characters long.
            /// </summary>
            Public = -770498947,

            /// <summary>
            /// VB Keyword for "Resume" which is 6 characters long.
            /// </summary>
            Resume = 406341802,

            /// <summary>
            /// VB Keyword for "Return" which is 6 characters long.
            /// </summary>
            Return = -1160069800,

            /// <summary>
            /// VB Keyword for "Select" which is 6 characters long.
            /// </summary>
            Select = 431776320,

            /// <summary>
            /// VB Keyword for "Shared" which is 6 characters long.
            /// </summary>
            Shared = -1598707379,

            /// <summary>
            /// VB Keyword for "Single" which is 6 characters long.
            /// </summary>
            Single = 1234455411,

            /// <summary>
            /// VB Keyword for "Static" which is 6 characters long.
            /// </summary>
            Static = -1972197055,

            /// <summary>
            /// VB Keyword for "String" which is 6 characters long.
            /// </summary>
            String = 1236128813,

            /// <summary>
            /// VB Keyword for "TypeOf" which is 6 characters long.
            /// </summary>
            TypeOf = 2101930777,

            /// <summary>
            /// VB Keyword for "UShort" which is 6 characters long.
            /// </summary>
            UShort = -718368731, 

            /// <summary>
            /// VB Keyword for "AndAlso" which is 7 characters long.
            /// </summary>
            AndAlso = 1696208030, 
            
            /// <summary>
            /// VB Keyword for "Boolean" which is 7 characters long.
            /// </summary>
            Boolean = 228529742, 
            
            /// <summary>
            /// VB Keyword for "CUShort" which is 7 characters long.
            /// </summary>
            CUShort = 1676107979, 
            
            /// <summary>
            /// VB Keyword for "Decimal" which is 7 characters long.
            /// </summary>
            Decimal = 2033559650, 
            
            /// <summary>
            /// VB Keyword for "Declare" which is 7 characters long.
            /// </summary>
            Declare = -650735885, 
            
            /// <summary>
            /// VB Keyword for "Default" which is 7 characters long.
            /// </summary>
            Default = 1948332219, 
            
            /// <summary>
            /// VB Keyword for "Finally" which is 7 characters long.
            /// </summary>
            Finally = -435538119, 
            
            /// <summary>
            /// VB Keyword for "GetType" which is 7 characters long.
            /// </summary>
            GetType = 1558249419, 
            
            /// <summary>
            /// VB Keyword for "Handles" which is 7 characters long.
            /// </summary>
            Handles = 759004581, 
            
            /// <summary>
            /// VB Keyword for "Imports" which is 7 characters long.
            /// </summary>
            Imports = -233471604, 
            
            /// <summary>
            /// VB Keyword for "Integer" which is 7 characters long.
            /// </summary>
            Integer = 1572351178, 
            
            /// <summary>
            /// VB Keyword for "MyClass" which is 7 characters long.
            /// </summary>
            MyClass = -688548562, 
            
            /// <summary>
            /// VB Keyword for "Nothing" which is 7 characters long.
            /// </summary>
            Nothing = 935729020, 
            
            /// <summary>
            /// VB Keyword for "Partial" which is 7 characters long.
            /// </summary>
            Partial = 882274439, 
            
            /// <summary>
            /// VB Keyword for "Private" which is 7 characters long.
            /// </summary>
            Private = 1801699217, 
            
            /// <summary>
            /// VB Keyword for "Shadows" which is 7 characters long.
            /// </summary>
            Shadows = -290914032, 
            
            /// <summary>
            /// VB Keyword for "TryCast" which is 7 characters long.
            /// </summary>
            TryCast = 652737960, 
            
            /// <summary>
            /// VB Keyword for "Unicode" which is 7 characters long.
            /// </summary>
            Unicode = -779174100, 
            
            /// <summary>
            /// VB Keyword for "Variant" which is 7 characters long.
            /// </summary>
            Variant = 482443457, 
            
            /// <summary>
            /// VB Keyword for "Assembly" which is 8 characters long.
            /// </summary>
            Assembly = -1274392817, 
            
            /// <summary>
            /// VB Keyword for "Continue" which is 8 characters long.
            /// </summary>
            Continue = 1055810917, 
            
            /// <summary>
            /// VB Keyword for "Delegate" which is 8 characters long.
            /// </summary>
            Delegate = -1136950777, 
            
            /// <summary>
            /// VB Keyword for "Function" which is 8 characters long.
            /// </summary>
            Function = -353457901, 
            
            /// <summary>
            /// VB Keyword for "Inherits" which is 8 characters long.
            /// </summary>
            Inherits = 653658219, 
            
            /// <summary>
            /// VB Keyword for "Operator" which is 8 characters long.
            /// </summary>
            Operator = -1316706190, 
            
            /// <summary>
            /// VB Keyword for "Optional" which is 8 characters long.
            /// </summary>
            Optional = -1412377799, 
            
            /// <summary>
            /// VB Keyword for "Preserve" which is 8 characters long.
            /// </summary>
            Preserve = -1157905458, 
            
            /// <summary>
            /// VB Keyword for "Property" which is 8 characters long.
            /// </summary>
            Property = -101395334, 
            
            /// <summary>
            /// VB Keyword for "ReadOnly" which is 8 characters long.
            /// </summary>
            ReadOnly = 827624532, 
            
            /// <summary>
            /// VB Keyword for "SyncLock" which is 8 characters long.
            /// </summary>
            SyncLock = -1816775598, 
            
            /// <summary>
            /// VB Keyword for "UInteger" which is 8 characters long.
            /// </summary>
            UInteger = -65724977, 
            
            /// <summary>
            /// VB Keyword for "Widening" which is 8 characters long.
            /// </summary>
            Widening = -510615141, 
            
            /// <summary>
            /// VB Keyword for "AddressOf" which is 9 characters long.
            /// </summary>
            AddressOf = -1265283342, 
            
            /// <summary>
            /// VB Keyword for "Interface" which is 9 characters long.
            /// </summary>
            Interface = 775541518, 
            
            /// <summary>
            /// VB Keyword for "Namespace" which is 9 characters long.
            /// </summary>
            Namespace = -474292063, 
            
            /// <summary>
            /// VB Keyword for "Narrowing" which is 9 characters long.
            /// </summary>
            Narrowing = 51350436, 
            
            /// <summary>
            /// VB Keyword for "Overloads" which is 9 characters long.
            /// </summary>
            Overloads = 2116196784, 
            
            /// <summary>
            /// VB Keyword for "Overrides" which is 9 characters long.
            /// </summary>
            Overrides = 550189749, 
            
            /// <summary>
            /// VB Keyword for "Protected" which is 9 characters long.
            /// </summary>
            Protected = 170650980, 
            
            /// <summary>
            /// VB Keyword for "Structure" which is 9 characters long.
            /// </summary>
            Structure = -498074872, 
            
            /// <summary>
            /// VB Keyword for "WriteOnly" which is 9 characters long.
            /// </summary>
            WriteOnly = 632265146, 
            
            /// <summary>
            /// VB Keyword for "AddHandler" which is 10 characters long.
            /// </summary>
            AddHandler = 885237760, 
            
            /// <summary>
            /// VB Keyword for "DirectCast" which is 10 characters long.
            /// </summary>
            DirectCast = -828127012, 
            
            /// <summary>
            /// VB Keyword for "Implements" which is 10 characters long.
            /// </summary>
            Implements = -1020361886, 
            
            /// <summary>
            /// VB Keyword for "ParamArray" which is 10 characters long.
            /// </summary>
            ParamArray = -1293920887, 
            
            /// <summary>
            /// VB Keyword for "RaiseEvent" which is 10 characters long.
            /// </summary>
            RaiseEvent = -1071840721, 
            
            /// <summary>
            /// VB Keyword for "WithEvents" which is 10 characters long.
            /// </summary>
            WithEvents = 583005792, 
            
            /// <summary>
            /// VB Keyword for "MustInherit" which is 11 characters long.
            /// </summary>
            MustInherit = 1717128825, 
            
            /// <summary>
            /// VB Keyword for "Overridable" which is 11 characters long.
            /// </summary>
            Overridable = 559239523, 
            
            /// <summary>
            /// VB Keyword for "RemoveHandler" which is 13 characters long.
            /// </summary>
            RemoveHandler = 2028458294, 
            
            /// <summary>
            /// VB Keyword for "Class_Finalize" which is 14 characters long.
            /// </summary>
            Class_Finalize = 1226939628, 
            
            /// <summary>
            /// VB Keyword for "NotInheritable" which is 14 characters long.
            /// </summary>
            NotInheritable = -1308178037, 
            
            /// <summary>
            /// VB Keyword for "NotOverridable" which is 14 characters long.
            /// </summary>
            NotOverridable = 461129848, 
            
            /// <summary>
            /// VB Keyword for "Class_Initialize" which is 16 characters long.
            /// </summary>
            Class_Initialize = -693559889
        }
        #endregion //VBCodeTranslator nested types
    }
    #endregion //Oilexer nested types
}
 /* ----------------------------------------------\
 |  This file took 00:00:00.0087729 to generate.  |
 |  Date generated: 6/9/2007 2:46:52 AM           |
 \---------------------------------------------- */
