<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>9.0.30729</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{A2008B7F-AAD5-440E-9480-BB4BE95F6B04}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>AllenCopeland.Abstraction.Slf</RootNamespace>
    <AssemblyName>_abs.slf.languages.oilexer</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <IsWebBootstrapper>false</IsWebBootstrapper>
    <FileUpgradeFlags>
    </FileUpgradeFlags>
    <OldToolsVersion>3.5</OldToolsVersion>
    <UpgradeBackupLocation />
    <TargetFrameworkProfile />
    <PublishUrl>publish\</PublishUrl>
    <Install>true</Install>
    <InstallFrom>Disk</InstallFrom>
    <UpdateEnabled>false</UpdateEnabled>
    <UpdateMode>Foreground</UpdateMode>
    <UpdateInterval>7</UpdateInterval>
    <UpdateIntervalUnits>Days</UpdateIntervalUnits>
    <UpdatePeriodically>false</UpdatePeriodically>
    <UpdateRequired>false</UpdateRequired>
    <MapFileExtensions>true</MapFileExtensions>
    <ApplicationRevision>0</ApplicationRevision>
    <ApplicationVersion>1.0.0.%2a</ApplicationVersion>
    <UseApplicationTrust>false</UseApplicationTrust>
    <BootstrapperEnabled>true</BootstrapperEnabled>
    <SccProjectName>SAK</SccProjectName>
    <SccLocalPath>SAK</SccLocalPath>
    <SccProvider>SAK</SccProvider>
    <SccAuxPath>SAK</SccAuxPath>
    <AssemblyOriginatorKeyFile Condition="'$(Configuration)' == 'Release'">Allen Copeland.pfx</AssemblyOriginatorKeyFile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x64' ">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>..\Abstraction\Build\x64\Debug\</OutputPath>
    <DefineConstants>TRACE;DEBUG;WINDOWS, x64, ParallelProcessing, ShowStackReductionProgress+, ReduceGlobalLexer, ReduceProjections</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x64' ">
    <OutputPath>..\Abstraction\Build\x64\Release\</OutputPath>
    <DefineConstants>TRACE;WINDOWS, x64, ParallelProcessing, +ShowStackReductionProgress, ReduceGlobalLexer, ShortcircuitToFinishLexer+,ReduceProjections</DefineConstants>
    <Optimize>true</Optimize>
    <PlatformTarget>x64</PlatformTarget>
    <WarningsAsErrors>67,162,168,219</WarningsAsErrors>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <Prefer32Bit>false</Prefer32Bit>
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x86' ">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>..\Abstraction\Build\x86\Debug\</OutputPath>
    <DefineConstants>TRACE;DEBUG;WINDOWS, x86, PROCESS_STATES, ParallelProcessing, +ShowStackReductionProgress, +EmitTransitionDetails, ShortcircuitToFinishLexer+, ReduceGlobalLexer,ReduceProjections</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <Prefer32Bit>false</Prefer32Bit>
    <DocumentationFile>
    </DocumentationFile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x86' ">
    <OutputPath>..\Abstraction\Build\x86\Release\</OutputPath>
    <DefineConstants>WINDOWS, x86,ParallelProcessing, +ShowStackReductionProgress, +ShortcircuitToFinishLexer, ReduceGlobalLexer, ShortcutToFindBug13+, ReduceProjections</DefineConstants>
    <Optimize>true</Optimize>
    <PlatformTarget>x86</PlatformTarget>
    <WarningsAsErrors>67,162,168,219</WarningsAsErrors>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <Prefer32Bit>false</Prefer32Bit>
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
  </PropertyGroup>
  <PropertyGroup>
    <StartupObject>
    </StartupObject>
  </PropertyGroup>
  <PropertyGroup />
  <PropertyGroup>
    <SignAssembly>true</SignAssembly>
  </PropertyGroup>
  <PropertyGroup>
    <AssemblyOriginatorKeyFile Condition=" '$(Configuration)' == 'Release' ">Allen Copeland.pfx</AssemblyOriginatorKeyFile>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|AnyCPU'">
    <OutputPath>..\Abstraction\Build\Any-Cpu\Release\</OutputPath>
    <DefineConstants>WINDOWS, x86,ParallelProcessing, ShowStackReductionProgress+, +ShortcircuitToFinishLexer, ReduceGlobalLexer, ShortcutToFindBug13+, ReduceProjections</DefineConstants>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <Optimize>true</Optimize>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <WarningsAsErrors>67,162,168,219</WarningsAsErrors>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|AnyCPU'">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>..\Abstraction\Build\Any-Cpu\Debug\</OutputPath>
    <DefineConstants>TRACE;DEBUG;WINDOWS, x86, PROCESS_STATES, ParallelProcessing, ShowStackReductionProgress+, +EmitTransitionDetails, ShortcircuitToFinishLexer+, ReduceGlobalLexer,ReduceProjections, PLATFORM_ANY</DefineConstants>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <DocumentationFile>
    </DocumentationFile>
    <DebugType>full</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.Numerics" />
    <Reference Include="System.Xml.Linq">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.Data.DataSetExtensions">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup Condition="'$(SolutionName)' == 'Abstraction'">
    <ProjectReference Include="..\AbstractionProject\Libraries\Utilities\Numerics\Numerics.csproj">
      <Project>{ee0bb74e-bcaa-4797-87b0-4d67124f74e6}</Project>
      <Name>Numerics</Name>
    </ProjectReference>
    <ProjectReference Include="..\AbstractionProject\Libraries\SLF\Ast\Abstract Syntax Tree.csproj">
      <Project>{02607dc2-e98b-43ae-b906-fe151a70a68d}</Project>
      <Name>Abstract Syntax Tree</Name>
      <Private>False</Private>
    </ProjectReference>
    <ProjectReference Include="..\AbstractionProject\Libraries\SLF\Compilers\Abstraction Compiler Services\Abstraction Compiler Services.csproj">
      <Project>{df6044a9-ae48-4ac2-a170-eb839bb0058c}</Project>
      <Name>Abstraction Compiler Services</Name>
      <Private>False</Private>
    </ProjectReference>
    <ProjectReference Include="..\AbstractionProject\Libraries\SLF\Languages\CSharp\CSharp.csproj">
      <Project>{a5e27b08-e854-40d5-b88b-0f10d1ca64af}</Project>
      <Name>CSharp</Name>
      <Private>False</Private>
    </ProjectReference>
    <ProjectReference Include="..\AbstractionProject\Libraries\SLF\Metadata\Metadata Library\Metadata Library.csproj">
      <Project>{a94a88da-2500-4372-a433-a07ac3bfa05f}</Project>
      <Name>Metadata Library</Name>
      <Private>False</Private>
    </ProjectReference>
    <ProjectReference Include="..\AbstractionProject\Libraries\SLF\TypeSystems\Abstract\TypeSystem Abstract.csproj">
      <Project>{161eaa8c-20c6-4b82-925a-4b8b112910ab}</Project>
      <Name>TypeSystem Abstract</Name>
      <Private>False</Private>
    </ProjectReference>
    <ProjectReference Include="..\AbstractionProject\Libraries\SLF\TypeSystems\Ecma-335 Common Type System\Ecma-335 Common Type System.csproj">
      <Project>{d455d4ff-54fd-431e-bd27-43da130a0faa}</Project>
      <Name>Ecma-335 Common Type System</Name>
      <Private>False</Private>
    </ProjectReference>
    <ProjectReference Include="..\AbstractionProject\Libraries\Utilities\Common\Common Utilities.csproj">
      <Project>{b449e1f5-149c-4f47-bbfc-a82eee96471a}</Project>
      <Name>Common Utilities</Name>
      <Private>False</Private>
    </ProjectReference>
    <ProjectReference Include="..\AbstractionProject\Libraries\Utilities\FiniteAutomation\Finite Automation.csproj">
      <Project>{ecc67b87-6eba-4f40-baae-fe838ff8afa3}</Project>
      <Name>Finite Automation</Name>
      <Private>False</Private>
    </ProjectReference>
    <ProjectReference Include="..\AbstractionProject\Libraries\SLF\Ecma-335 Abstract Syntax Tree\Ecma-335 Abstract Syntax Tree.csproj">
      <Project>{961977fe-07e8-40dd-a738-db8dce6cc482}</Project>
      <Name>Ecma-335 Abstract Syntax Tree</Name>
      <Private>False</Private>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup Condition="'$(SolutionName)|$(Configuration)|$(Platform)' == 'OILexer|Release|x86'">
    <!--x86 Platform-->
    <Reference Include="_abs.slf.ast, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1622f8f6d7e5122e, processorArchitecture=x86">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x86\Release\_abs.slf.ast.dll</HintPath>
    </Reference>
    <Reference Include="_abs.slf.cli.ast, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1622f8f6d7e5122e, processorArchitecture=x86">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x86\Release\_abs.slf.cli.ast.dll</HintPath>
    </Reference>
    <Reference Include="_abs.slf.compilerservices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1622f8f6d7e5122e, processorArchitecture=x86">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x86\Release\_abs.slf.compilerservices.dll</HintPath>
    </Reference>
    <Reference Include="_abs.slf.languages.csharp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1622f8f6d7e5122e, processorArchitecture=x86">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x86\Release\_abs.slf.languages.csharp.dll</HintPath>
    </Reference>
    <Reference Include="_abs.slf.metadata, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1622f8f6d7e5122e, processorArchitecture=x86">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x86\Release\_abs.slf.metadata.dll</HintPath>
    </Reference>
    <Reference Include="_abs.slf.typesystems.abstract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1622f8f6d7e5122e, processorArchitecture=x86">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x86\Release\_abs.slf.typesystems.abstract.dll</HintPath>
    </Reference>
    <Reference Include="_abs.slf.typesystems.cli, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1622f8f6d7e5122e, processorArchitecture=x86">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x86\Release\_abs.slf.typesystems.cli.dll</HintPath>
    </Reference>
    <Reference Include="_abs.util.automata, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1622f8f6d7e5122e, processorArchitecture=x86">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x86\Release\_abs.util.automata.dll</HintPath>
    </Reference>
    <Reference Include="_abs.util.common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1622f8f6d7e5122e, processorArchitecture=x86">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x86\Release\_abs.util.common.dll</HintPath>
    </Reference>
    <Reference Include="_abs.util.numerics, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1622f8f6d7e5122e, processorArchitecture=x86">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x86\Release\_abs.util.numerics.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup Condition="'$(SolutionName)|$(Configuration)|$(Platform)' == 'OILexer|Debug|x86'">
    <Reference Include="_abs.slf.ast, Version=1.0.0.0, Culture=neutral, PublicKeyToken=, processorArchitecture=x86">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x86\Debug\_abs.slf.ast.dll</HintPath>
    </Reference>
    <Reference Include="_abs.slf.cli.ast, Version=1.0.0.0, Culture=neutral, PublicKeyToken=, processorArchitecture=x86">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x86\Debug\_abs.slf.cli.ast.dll</HintPath>
    </Reference>
    <Reference Include="_abs.slf.languages.csharp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=, processorArchitecture=x86">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x86\Debug\_abs.slf.languages.csharp.dll</HintPath>
    </Reference>
    <Reference Include="_abs.slf.compilerservices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=, processorArchitecture=x86">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x86\Debug\_abs.slf.compilerservices.dll</HintPath>
    </Reference>
    <Reference Include="_abs.slf.metadata, Version=1.0.0.0, Culture=neutral, PublicKeyToken=, processorArchitecture=x86">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x86\Debug\_abs.slf.metadata.dll</HintPath>
    </Reference>
    <Reference Include="_abs.slf.typesystems.abstract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=, processorArchitecture=x86">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x86\Debug\_abs.slf.typesystems.abstract.dll</HintPath>
    </Reference>
    <Reference Include="_abs.slf.typesystems.cli, Version=1.0.0.0, Culture=neutral, PublicKeyToken=, processorArchitecture=x86">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x86\Debug\_abs.slf.typesystems.cli.dll</HintPath>
    </Reference>
    <Reference Include="_abs.util.automata, Version=1.0.0.0, Culture=neutral, PublicKeyToken=, processorArchitecture=x86">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x86\Debug\_abs.util.automata.dll</HintPath>
    </Reference>
    <Reference Include="_abs.util.common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=, processorArchitecture=x86">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x86\Debug\_abs.util.common.dll</HintPath>
    </Reference>
    <Reference Include="_abs.util.numerics, Version=1.0.0.0, Culture=neutral, PublicKeyToken=, processorArchitecture=x86">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x86\Debug\_abs.util.numerics.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup Condition="'$(SolutionName)|$(Configuration)|$(Platform)' == 'OILexer|Release|x64'">
    <!--x64 Platform-->
    <Reference Include="_abs.slf.ast, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1622f8f6d7e5122e, processorArchitecture=x64">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x64\Release\_abs.slf.ast.dll</HintPath>
    </Reference>
    <Reference Include="_abs.slf.cli.ast, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1622f8f6d7e5122e, processorArchitecture=x64">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x64\Release\_abs.slf.cli.ast.dll</HintPath>
    </Reference>
    <Reference Include="_abs.slf.languages.csharp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1622f8f6d7e5122e, processorArchitecture=x86">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x64\Release\_abs.slf.languages.csharp.dll</HintPath>
    </Reference>
    <Reference Include="_abs.slf.compilerservices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1622f8f6d7e5122e, processorArchitecture=x64">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x64\Release\_abs.slf.compilerservices.dll</HintPath>
    </Reference>
    <Reference Include="_abs.slf.metadata, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1622f8f6d7e5122e, processorArchitecture=x64">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x64\Release\_abs.slf.metadata.dll</HintPath>
    </Reference>
    <Reference Include="_abs.slf.typesystems.abstract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1622f8f6d7e5122e, processorArchitecture=x64">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x64\Release\_abs.slf.typesystems.abstract.dll</HintPath>
    </Reference>
    <Reference Include="_abs.slf.typesystems.cli, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1622f8f6d7e5122e, processorArchitecture=x64">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x64\Release\_abs.slf.typesystems.cli.dll</HintPath>
    </Reference>
    <Reference Include="_abs.util.automata, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1622f8f6d7e5122e, processorArchitecture=x64">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x64\Release\_abs.util.automata.dll</HintPath>
    </Reference>
    <Reference Include="_abs.util.common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1622f8f6d7e5122e, processorArchitecture=x64">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x64\Release\_abs.util.common.dll</HintPath>
    </Reference>
    <Reference Include="_abs.util.numerics, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1622f8f6d7e5122e, processorArchitecture=x64">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x64\Release\_abs.util.numerics.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup Condition="'$(SolutionName)|$(Configuration)|$(Platform)' == 'OILexer|Debug|x64'">
    <Reference Include="_abs.slf.ast, Version=1.0.0.0, Culture=neutral, PublicKeyToken=, processorArchitecture=x64">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x64\Debug\_abs.slf.ast.dll</HintPath>
    </Reference>
    <Reference Include="_abs.slf.cli.cli.ast, Version=1.0.0.0, Culture=neutral, PublicKeyToken=, processorArchitecture=x64">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x64\Debug\_abs.slf.cli.ast.dll</HintPath>
    </Reference>
    <Reference Include="_abs.slf.languages.csharp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=, processorArchitecture=x64">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x64\Debug\_abs.slf.languages.csharp.dll</HintPath>
    </Reference>
    <Reference Include="_abs.slf.compilerservices, Version=1.0.0.0, Culture=neutral, PublicKeyToken=, processorArchitecture=x64">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x64\Debug\_abs.slf.compilerservices.dll</HintPath>
    </Reference>
    <Reference Include="_abs.slf.metadata, Version=1.0.0.0, Culture=neutral, PublicKeyToken=, processorArchitecture=x64">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x64\Debug\_abs.slf.metadata.dll</HintPath>
    </Reference>
    <Reference Include="_abs.slf.typesystems.abstract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=, processorArchitecture=x64">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x64\Debug\_abs.slf.typesystems.abstract.dll</HintPath>
    </Reference>
    <Reference Include="_abs.slf.typesystems.cli, Version=1.0.0.0, Culture=neutral, PublicKeyToken=, processorArchitecture=x64">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x64\Debug\_abs.slf.typesystems.cli.dll</HintPath>
    </Reference>
    <Reference Include="_abs.util.automata, Version=1.0.0.0, Culture=neutral, PublicKeyToken=, processorArchitecture=x64">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x64\Debug\_abs.util.automata.dll</HintPath>
    </Reference>
    <Reference Include="_abs.util.common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=, processorArchitecture=x64">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x64\Debug\_abs.util.common.dll</HintPath>
    </Reference>
    <Reference Include="_abs.util.numerics, Version=1.0.0.0, Culture=neutral, PublicKeyToken=, processorArchitecture=x64">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Abstraction\Build\x64\Debug\_abs.util.numerics.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <BootstrapperPackage Include="Microsoft.Net.Client.3.5">
      <Visible>False</Visible>
      <ProductName>.NET Framework 3.5 SP1 Client Profile</ProductName>
      <Install>false</Install>
    </BootstrapperPackage>
    <BootstrapperPackage Include="Microsoft.Net.Framework.2.0">
      <Visible>False</Visible>
      <ProductName>.NET Framework 2.0 %28x86%29</ProductName>
      <Install>false</Install>
    </BootstrapperPackage>
    <BootstrapperPackage Include="Microsoft.Net.Framework.3.0">
      <Visible>False</Visible>
      <ProductName>.NET Framework 3.0 %28x86%29</ProductName>
      <Install>false</Install>
    </BootstrapperPackage>
    <BootstrapperPackage Include="Microsoft.Net.Framework.3.5">
      <Visible>False</Visible>
      <ProductName>.NET Framework 3.5</ProductName>
      <Install>false</Install>
    </BootstrapperPackage>
    <BootstrapperPackage Include="Microsoft.Net.Framework.3.5.SP1">
      <Visible>False</Visible>
      <ProductName>.NET Framework 3.5 SP1</ProductName>
      <Install>true</Install>
    </BootstrapperPackage>
    <BootstrapperPackage Include="Microsoft.Windows.Installer.3.1">
      <Visible>False</Visible>
      <ProductName>Windows Installer 3.1</ProductName>
      <Install>true</Install>
    </BootstrapperPackage>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Compilers\Oilexer\CharStreamBuilder.cs" />
    <Compile Include="Compilers\Oilexer\CharStreamSegmentBuilder.cs" />
    <Compile Include="Compilers\Oilexer\CommonSymbolBuilder.cs" />
    <Compile Include="Compilers\Oilexer\ErrorContextBuilder.cs" />
    <Compile Include="Compilers\Oilexer\ExtensionsBuilder.cs" />
    <Compile Include="Compilers\Oilexer\IConstructBuilder.cs" />
    <Compile Include="Compilers\Oilexer\MultikeyedDictionaryBuilder.cs" />
    <Compile Include="Compilers\Oilexer\ParserBuilder %28ParseMethods%29.cs" />
    <Compile Include="Compilers\Oilexer\ParserResultsBuilder.cs" />
    <Compile Include="Compilers\Oilexer\ProjectionSymbolBuilder.cs" />
    <Compile Include="Compilers\Oilexer\RegularLanguageDFAUnicodeGraph.cs" />
    <Compile Include="Compilers\Oilexer\RootRuleBuilder.cs" />
    <Compile Include="Compilers\Oilexer\RuleSymbolBuilder.cs" />
    <Compile Include="Compilers\Oilexer\LexerBuilder.cs" />
    <Compile Include="Compilers\Oilexer\ParserBuilder.cs" />
    <Compile Include="Compilers\Oilexer\ParserSymbolContextConcepts.cs" />
    <Compile Include="Compilers\Oilexer\IUnicodeCollectiveTargetGraph.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Compilers\Oilexer\IUnicodeTarget.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Compilers\Oilexer\IUnicodeTargetCategory.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Compilers\Oilexer\IUnicodeTargetGraph.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Compilers\Oilexer\IUnicodeTargetPartialCategory.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Compilers\Oilexer\ParserCompiler.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Compilers\Oilexer\ParserCompilerPhase.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Compilers\Oilexer\ParserBuilderPhaseChangeEventArgs.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Compilers\Oilexer\ParserCompilerResults.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Compilers\Oilexer\ParserCompilerExtensions.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Compilers\Oilexer\StackContextBuilder.cs" />
    <Compile Include="Compilers\Oilexer\GenericSymbolStreamBuilder.cs" />
    <Compile Include="Compilers\Oilexer\SymbolStoreBuilder.cs" />
    <Compile Include="Compilers\Oilexer\TokenEqualityLevel.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Compilers\Oilexer\TokenPrecedenceTable.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Compilers\Oilexer\SymbolStreamBuilder.cs" />
    <Compile Include="Compilers\Oilexer\TokenStreamBuilder.cs" />
    <Compile Include="Compilers\Oilexer\TokenSymbolBuilder.cs" />
    <Compile Include="Compilers\Oilexer\UnicodeCollectiveTargetGraph.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Compilers\Oilexer\UnicodeTarget.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Compilers\Oilexer\UnicodeTargetCategory.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Compilers\Oilexer\UnicodeTargetGraph.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Compilers\Oilexer\UnicodeTargetPartialCategory.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Compilers\Oilexer\VariableTokenBaseBuilder.cs" />
    <Compile Include="Languages\Oilexer\EntryObjectRelationalMap.cs" />
    <Compile Include="Languages\Oilexer\IOilexerGrammarScannableEntryObjectification.cs" />
    <Compile Include="Languages\Oilexer\OilexerAssembly.cs" />
    <Compile Include="Languages\Oilexer\OilexerLanguage.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\OilexerProvider+AltParserBuilder.cs" />
    <Compile Include="Languages\Oilexer\OilexerProvider+AltParser.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\OilexerProvider.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\OilexerVendorProvider.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\OilexerGrammarCommentEntry.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\DefineSymbolDirective.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\OilexerGrammarEntry.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\EntryPreprocessorType.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\EntryScanMode.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\OilexerGrammarErrorEntry.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\OilexerGrammarFileObjectRelationalMap.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\ICommentEntry.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\IOilexerGrammarEntry.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\IEntryObjectRelationalMap.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\IOilexerGrammarErrorEntry.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\IOilexerGrammarFileObjectRelationalMap.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\INamedEntry.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\IPreprocessorAddRuleDirective.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\IPreprocessorCEqualityExp.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\IPreprocessorCExp.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\IPreprocessorCLogicalAndConditionExp.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\IPreprocessorCLogicalOrConditionExp.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\IPreprocessorCPrimary.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\IPreprocessorDefineRuleDirective.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\IPreprocessorDefineSymbolDirective.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\IPreprocessorDirective.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\IPreprocessorDirectives.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\IPreprocessorEntryContainer.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\IPreprocessorIfDirective.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\IPreprocessorStringTerminalDirective.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\IPreprocessorReturnDirective.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\IPreprocessorThrowDirective.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\IOilexerGrammarProductionRuleEntry.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\IProductionRuleTemplateEntry.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\IRuleEntryObjectRelationalMap.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\IScannableEntry.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\IScannableEntryItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\ITokenEntry.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\ITokenEntryObjectRelationalMap.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\NamedEntry.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\PreprocessorAddRuleDirective.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\PreprocessorCEqualityExp.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\PreprocessorCExp.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\PreprocessorCLogicalAndConditionExp.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\PreprocessorCLogicalOrConditionExp.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\PreprocessorConditionalReturnDirective.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\PreprocessorCPrimary.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\PreprocessorDefineRuleDirective.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\PreprocessorDirectiveBase.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\PreprocessorEntryContainer.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\PreprocessorIfDirective.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\PreprocessorIncludeDirective.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\PreprocessorProductionRuleSeries.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\PreprocessorThrowDirective.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\ProductionRuleEntry.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\ProductionRuleTemplateEntry.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\RuleEntryBranchObjectRelationalMap.cs" />
    <Compile Include="Languages\Oilexer\RuleEntryChildBranchObjectRelationalMap.cs" />
    <Compile Include="Languages\Oilexer\RuleEntryChildObjectRelationalMap.cs" />
    <Compile Include="Languages\Oilexer\RuleEntryObjectRelationalMap.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\GrammarAmbiguousSymbol.cs" />
    <Compile Include="Languages\Oilexer\Rules\GrammarBreakdown.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\GrammarConstantEntrySymbol.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\GrammarConstantItemSymbol.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\GrammarConstantSymbol.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\GrammarRuleSymbol.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\GrammarSymbolComparer.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\GrammarSymbolSet.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\GrammarTokenSymbol.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\GrammarVariableSymbol.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\GrammarVocabulary.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\GrammarVocabularyModel.cs" />
    <Compile Include="Languages\Oilexer\Rules\IGrammarAmbiguousSymbol.cs" />
    <Compile Include="Languages\Oilexer\Rules\IPreprocessorGroupProductionRuleItem.cs" />
    <Compile Include="Languages\Oilexer\Rules\IPredictionTreeDestination.cs" />
    <Compile Include="Languages\Oilexer\Rules\ISubtractCommandProductionRuleItem.cs" />
    <Compile Include="Languages\Oilexer\Rules\IGrammarConstantEntrySymbol.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\IGrammarConstantItemSymbol.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\IGrammarConstantSymbol.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\IGrammarRuleSymbol.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\IGrammarSymbol.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\IGrammarSymbolSet.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\IGrammarTokenSymbol.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\IGrammarVariableSymbol.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\ILiteralCharProductionRuleItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\ILiteralCharReferenceProductionRuleItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\ILiteralProductionRuleItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\ILiteralProductionRuleItem{T}.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\ILiteralReferenceProductionRuleItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\ILiteralReferenceProductionRuleItem{T}.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\ILiteralStringProductionRuleItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\ILiteralStringReferenceProductionRuleItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\IProductionRule.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\IProductionRuleExpressionSeries.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\IProductionRuleGroupItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\IProductionRuleItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\IProductionRulePreprocessor.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\IProductionRuleSource.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\IProductionRuleSpecialItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\IProductionRuleTemplatePart.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\IProductionRuleTemplateParts.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\IRuleReferenceProductionRuleItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\ISoftReferenceProductionRuleItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\ISoftTemplateReferenceProductionRuleItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\ITemplateParamReferenceProductionRuleItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\ITemplateReferenceProductionRuleItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\ITokenReferenceProductionRuleItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\LiteralCharProductionRuleItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\LiteralCharReferenceProductionRuleItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\LiteralProductionRuleItem{T}.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\LiteralReferenceProductionRuleItem{TValue, TLiteral}.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\LiteralStringProductionRuleItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\LiteralStringReferenceProductionRuleItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\LookAheadReductionType.cs" />
    <Compile Include="Languages\Oilexer\Rules\PredictionTreeDestinationAvenue.cs" />
    <Compile Include="Languages\Oilexer\Rules\PredictionTreeDestinationAvenues.cs" />
    <Compile Include="Languages\Oilexer\Rules\ProductionRule.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\ProductionRuleGroupItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\ProductionRuleItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\ProductionRuleLeftRecursionType.cs" />
    <Compile Include="Languages\Oilexer\Rules\ProductionRuleLookAheadBucket.cs" />
    <Compile Include="Languages\Oilexer\Rules\ProductionRuleNormalAdapter.cs" />
    <Compile Include="Languages\Oilexer\Rules\ProductionRuleNormalContext.cs" />
    <Compile Include="Languages\Oilexer\Rules\ProductionRulePreprocessorDirective.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\PreprocessorGroupProductionRuleItem.cs" />
    <Compile Include="Languages\Oilexer\Rules\PredictionTreeDestinationPoint.cs" />
    <Compile Include="Languages\Oilexer\Rules\PredictionTreeDFAdapter.cs" />
    <Compile Include="Languages\Oilexer\Rules\PredictionTreeDFAContext.cs" />
    <Compile Include="Languages\Oilexer\Rules\PredictionTreeDestination.cs" />
    <Compile Include="Languages\Oilexer\Rules\PredictionTree.cs" />
    <Compile Include="Languages\Oilexer\Rules\PredictionTreeFollow.cs" />
    <Compile Include="Languages\Oilexer\Rules\PredictionTreeFollowCaller.cs" />
    <Compile Include="Languages\Oilexer\Rules\PredictionTreeLeaf.cs" />
    <Compile Include="Languages\Oilexer\Rules\PredictionTreeBranch.cs" />
    <Compile Include="Languages\Oilexer\Rules\PredictionTreeLeafVeins.cs" />
    <Compile Include="Languages\Oilexer\Rules\ProductionRuleProjectionReduction.cs" />
    <Compile Include="Languages\Oilexer\Rules\ProductionRuleProjectionType.cs" />
    <Compile Include="Languages\Oilexer\Rules\ProductionRuleSeries.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\ProductionRuleTemplatePart.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\RuleReferenceProductionRuleItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\SoftReferenceProductionRuleItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\SoftTemplateReferenceProductionRuleItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\SyntacticalDFARootState.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\SyntacticalDFAState.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\SyntacticalDFAStateTransitionTable.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\SyntacticalNFARootState.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\SyntacticalNFAState.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\TemplateParamReferenceProductionRuleItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\TemplateReferenceProductionRuleItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Rules\TokenReferenceProductionRuleItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\ScannableEntryItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\ScannableEntryItemRepeatInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\ScannableEntryItemRepeatOptions.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\StringTerminalKind.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\TokenEntry.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\TokenEntryObjectRelationalMap.cs" />
    <Compile Include="Languages\Oilexer\TokenEOFEntry.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\CharRangeTokenItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\CommandTokenItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\ICharRangeTokenItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\ICommandTokenItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\ILiteralCharReferenceTokenItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\ILiteralCharTokenItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\ILiteralReferenceTokenItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\ILiteralReferenceTokenItem{T}.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\ILiteralStringReferenceTokenItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\ILiteralStringTokenItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\ILiteralTokenItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\ILiteralTokenItem{T}.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\INamedTokenSource.cs" />
    <Compile Include="Languages\Oilexer\Tokens\IScanCommandTokenItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\ISoftReferenceTokenItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\ISubtractionCommand.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\ITokenExpression.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\ITokenExpressionSeries.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\ITokenGroupItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\ITokenItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\ITokenReferenceTokenItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\ITokenSource.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\IUnicodeGraphCommand.cs" />
    <Compile Include="Languages\Oilexer\Tokens\LiteralCharReferenceTokenItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\LiteralCharTokenItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\LiteralReferenceTokenItem{T}.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\LiteralStringReferenceTokenItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\LiteralStringTokenItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\LiteralTokenItem{T}.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\RegularCaptureType.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\RegularLanguageDFAFlowGraph.cs" />
    <Compile Include="Languages\Oilexer\Tokens\RegularLanguageDFARootState.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\RegularLanguageDFAState.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\RegularLanguageDFATransitionTable.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\RegularLanguageNFARootState.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\RegularLanguageNFAState.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\RegularLanguageSet+RangeInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\RegularLanguageSet.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\ScanCommandTokenItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\SoftReferenceTokenItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\SubtractionCommandTokenItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\TokenExpression.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\TokenExpressionSeries.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\TokenGroupItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\TokenItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\TokenReferenceTokenItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Languages\Oilexer\Tokens\UnicodeGraphCommand.cs" />
    <Compile Include="Parsers\OilexerParser+Lexer.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OilexerParser+PreprocessorContainer.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OilexerParser.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\OilexerGrammarCommentRegion.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\OilexerGrammarFile+MyOptions.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\OilexerGrammarFile.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\OilexerGrammarParserErrors.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\OilexerGrammarParserResults.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\OilexerGrammarPreprocessorRegion.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\OilexerGrammarProductionRuleGroupRegion.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\OilexerGrammarProductionRuleRegion.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\OilexerGrammarToken.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\OilexerGrammarTokenGroupRegion.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\OilexerGrammarTokenRegion.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\OilexerGrammarTokens+CharacterRangeToken.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\OilexerGrammarTokens+CharLiteralToken.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\OilexerGrammarTokens+CommentToken.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\OilexerGrammarTokens+IdentifierToken.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\OilexerGrammarTokens+NumberLiteral.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\OilexerGrammarTokens+OperatorToken.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\OilexerGrammarTokens+PreprocessorDirective.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\OilexerGrammarTokens+ReferenceToken.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\OilexerGrammarTokens+StringLiteralToken.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\OilexerGrammarTokens+WhitespaceToken.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\OilexerGrammarTokens.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\OilexerGrammarTokenType.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\IOilexerGrammarFile.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\IOilexerGrammarFileOptions.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\IOilexerGrammarParser.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\IOilexerGrammarRegion.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\IOilexerGrammarToken.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\IOilexerGrammarTokenizer.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\IParser.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\IParser{TToken, TTokenizer, TResult}.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\IToken.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\ITokenizer.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\ITokenizer{T}.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\ITokenStream.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\Parser.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\ParserMode.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\Parser{TToken, TTokenizer, TResult}.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\StringStream.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\Token.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\Tokenizer.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\Tokenizer{T}.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Parsers\OILexer\TokenStream.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Properties\ParserAssemblyInfo.cs" />
    <Compile Include="Properties\ParserResources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>ParserResources.resx</DependentUpon>
    </Compile>
    <Compile Include="_Internal\Oilexer\Captures\IProductionRuleCaptureStructuralItem.cs" />
    <Compile Include="_Internal\Oilexer\Captures\IProductionRuleCaptureStructure.cs" />
    <Compile Include="_Internal\Oilexer\Captures\IProductionRuleTokenReferenceStructuralItem.cs" />
    <Compile Include="_Internal\Oilexer\Captures\ProductionRuleCaptureGeneralStructuralItem.cs" />
    <Compile Include="_Internal\Oilexer\Captures\ProductionRuleCaptureReferenceStructuralItemBase.cs" />
    <Compile Include="_Internal\Oilexer\Captures\ProductionRuleCaptureStructuralItem.cs" />
    <Compile Include="_Internal\Oilexer\Captures\ProductionRuleCaptureStructure.cs" />
    <Compile Include="_Internal\Oilexer\Captures\ProductionRuleStructuralExtractionCore.cs" />
    <Compile Include="_Internal\Oilexer\FlowAnalysis\DiscriminatorEquivalenceWalker.cs" />
    <Compile Include="_Internal\Oilexer\FlowAnalysis\SwitchCaseEquivalenceWalker.cs" />
    <Compile Include="_Internal\Oilexer\FlowAnalysis\SyntacticalDFAnalysis.cs" />
    <Compile Include="_Internal\Oilexer\OilexerGrammarCore+CompilerWarnings.cs" />
    <Compile Include="_Internal\Oilexer\SyntacticAnalysisCore.cs" />
    <Compile Include="_Internal\Oilexer\BitStreamCreator.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="_Internal\Oilexer\Captures\CaptureTokenCharRangeStructuralItem.cs" />
    <Compile Include="_Internal\Oilexer\Captures\CaptureTokenGeneralStructuralItem.cs" />
    <Compile Include="_Internal\Oilexer\Captures\CaptureTokenLiteralStructuralItem.cs" />
    <Compile Include="_Internal\Oilexer\Captures\CaptureTokenStructuralItem.cs" />
    <Compile Include="_Internal\Oilexer\Captures\CaptureTokenStructure.cs" />
    <Compile Include="_Internal\Oilexer\Captures\ICaptureTokenCharRangeStructuralItem.cs" />
    <Compile Include="_Internal\Oilexer\Captures\ICaptureTokenGeneralStructuralItem.cs" />
    <Compile Include="_Internal\Oilexer\Captures\ICaptureTokenGroupStructuralItem.cs" />
    <Compile Include="_Internal\Oilexer\Captures\ICaptureTokenLinkedSetStructuralItem.cs" />
    <Compile Include="_Internal\Oilexer\Captures\ICaptureTokenLiteralStructuralItem.cs" />
    <Compile Include="_Internal\Oilexer\Captures\ICaptureTokenStructuralItem.cs" />
    <Compile Include="_Internal\Oilexer\Captures\ICaptureTokenStructure.cs" />
    <Compile Include="_Internal\Oilexer\Captures\ResultedDataType.cs" />
    <Compile Include="_Internal\Oilexer\Captures\TokenStructuralExtractionCore.cs" />
    <Compile Include="_Internal\Oilexer\OilexerGrammarCore+CompilerErrors.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="_Internal\Oilexer\OilexerGrammarCore.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="_Internal\Oilexer\Inlining\IInlinedTokenItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="_Internal\Oilexer\Inlining\InlinedCharRangeTokenItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="_Internal\Oilexer\Inlining\InlinedLiteralCharReferenceTokenItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="_Internal\Oilexer\Inlining\InlinedLiteralCharTokenItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="_Internal\Oilexer\Inlining\InlinedLiteralStringReferenceTokenItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="_Internal\Oilexer\Inlining\InlinedLiteralStringTokenItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="_Internal\Oilexer\Inlining\InlinedScanTokenItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="_Internal\Oilexer\Inlining\InlinedSubtractionCommandTokenItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="_Internal\Oilexer\Inlining\InlinedTokenEntry.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="_Internal\Oilexer\Inlining\OilexerGrammarInlinedTokenEofEntry.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="_Internal\Oilexer\Inlining\InlinedTokenExpression.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="_Internal\Oilexer\Inlining\InlinedTokenExpressionSeries.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="_Internal\Oilexer\Inlining\InlinedTokenGroupItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="_Internal\Oilexer\Inlining\InlinedTokenReferenceTokenItem.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="_Internal\Oilexer\Inlining\InlinedBaseEncodeGraphCommand.cs" />
    <Compile Include="_Internal\Oilexer\Inlining\OilexerGrammarInliningCore.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="_Internal\Oilexer\OilexerGrammarLinkerCore %28Stage 1%29.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="_Internal\Oilexer\OilexerGrammarLinkerCore %28Stage 2%29.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="_Internal\Oilexer\OilexerGrammarLinkerCore %28Stage 3%29.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="_Internal\Oilexer\OilexerGrammarLinkerCore+ProductionRuleTemplateArgumentSeries.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="_Internal\Oilexer\_OilexerGrammarResolutionAssistant.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="_Internal\Oilexer\_OIL+_Core.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="_Internal\Oilexer\_OIL.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="Properties\ParserResources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>ParserResources.Designer.cs</LastGenOutput>
      <CustomToolNamespace>AllenCopeland.Abstraction.Slf.Languages.Oilexer.Properties</CustomToolNamespace>
    </EmbeddedResource>
    <EmbeddedResource Include="_Internal\Oilexer\_OIL.resx">
      <DependentUpon>_OIL.cs</DependentUpon>
    </EmbeddedResource>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Languages\Oilexer\Rules\PathPredictionType.cs" />
    <Content Include="_Internal\Oilexer\Inlining\ReadMe.txt" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
  <PropertyGroup>
    <PostBuildEvent>
    </PostBuildEvent>
  </PropertyGroup>
</Project>