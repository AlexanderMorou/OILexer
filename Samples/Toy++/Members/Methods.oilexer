#include                   "Members.oilexer";

/* --------------------------------------- *\
|*              B.2.7: Classes             *|
\* --------------------------------------- */

MethodDeclaration                        ::=>
    AbstractMethodDeclaration               |
    ConcreteMethodDeclaration               ;

AbstractMethodDeclaration                 ::=
    (Attributes:Attributes; Whitespace?)?
    (
        Tuple<"abstract" Whitespace, ("new" Whitespace)?, ("protected" Whitespace)?, ("internal" Whitespace)?>
        Tuple<"abstract" Whitespace, ("new" Whitespace)?, ("public" Whitespace)?>
    ):Modifiers;
    ReturnType:ReturnType; Whitespace
    Identifier:Name;
    WhitePaddingOpt<GenericHeader<
        '(' 
            WhitePaddingOpt<
            FormalParameterList:Parameters;?>
        ')'>>
    ';'                                     ;

ConcreteMethodDeclaration                ::=>
    ExternMethodDeclaration                 |
    ExternInterfaceMethodDeclaration        |
    InternInterfaceMethodDeclaration        |
    InternMethodDeclaration                 ;

InternInterfaceMethodDeclaration          ::=
    (Attributes:Attributes; Whitespace?)?
    "extern" Whitespace
    ("partial"!:IsPartial; Whitespace)?
    ReturnType:ReturnType; Whitespace
    Type:InterfaceType; WhitePaddingOpt<'.'> Identifier:Name;
    WhitePaddingOpt<GenericHeader<
        '(' 
            WhitePaddingOpt<
            FormalParameterList:Parameters;?>
        ')'>>
    Block:Body;                             ;

InternMethodDeclaration                   ::=
    (Attributes:Attributes; Whitespace?)?
    (
        Tuple<"override" Whitespace, ("sealed" Whitespace)?, ("internal" Whitespace)?, ("protected" Whitespace)?> |
        Tuple<"override" Whitespace, ("sealed" Whitespace)?, (("public" | "private") Whitespace)?> |
        OTuple<"new" Whitespace, ("public" | "private") Whitespace, ("virtual" | "static") Whitespace> |
        OTuple<"new" Whitespace, "internal" Whitespace, "protected" Whitespace, ("virtual" | "static")  Whitespace> |
    ):Modifiers;
    ("partial"!:IsPartial; Whitespace)?
    ReturnType:ReturnType; Whitespace
    Identifier:Name;
    WhitePaddingOpt<GenericHeader<
        '(' 
            WhitePaddingOpt<
            FormalParameterList:Parameters;?>
        ')'>>
    Block:Body;                             ;

ExternInterfaceMethodDeclaration  ::=
    (Attributes:Attributes; Whitespace?)?
    "extern" Whitespace
    ("partial"!:IsPartial; Whitespace)?
    ReturnType:ReturnType; Whitespace
    Type:InterfaceType; WhitePaddingOpt<'.'> Identifier:Name;
    WhitePaddingOpt<GenericHeader<
        '(' 
            WhitePaddingOpt<
            FormalParameterList:Parameters;?>
        ')'>> ';'                           ;

ExternMethodDeclaration           ::=
    (Attributes:Attributes; Whitespace?)?
    (
        Tuple<"override" Whitespace, ("sealed" Whitespace)?, (("public" | "private") Whitespace)?, "extern" Whitespace> |
        Tuple<"override" Whitespace, ("sealed" Whitespace)?, ("internal" Whitespace)?, ("protected" Whitespace)?, "extern" Whitespace> |
        Tuple<("new" Whitespace)?, (("public" | "private") Whitespace)?, (("virtual" | "static") Whitespace)?, "extern" Whitespace> |
        Tuple<("new" Whitespace)?, ("internal" Whitespace)?, ("protected" Whitespace)?, (("virtual" | "static") Whitespace)?, "extern" Whitespace>
    ):Modifiers;
    ("partial"!:IsPartial; Whitespace)?
    ReturnType:ReturnType; Whitespace
    Identifier:Name;
    WhitePaddingOpt<GenericHeader<
        '(' 
            WhitePaddingOpt<
            FormalParameterList:Parameters;?>
        ')'>> ';'                           ;

/* --------------------------------------- *\
|*            B.2.10: Interfaces           *|
\* --------------------------------------- */

InterfaceMethodDeclaration                ::=
    (Attributes:Attributes; Whitespace?)?
    ("new"!:IsNew; Whitespace)?
    ReturnType:ReturnType; Whitespace
    Identifier:Name; 
    WhitePaddingOpt<
        GenericHeader<
        '(' WhitePaddingOpt<
            FormalParameterList:Parameters;?> 
        ')'>>
    ';'                                     ;

/* --------------------------------------- *\
|*    T*y++ Specific Generic Extensions    *|
\* --------------------------------------- */
TypeParameterMethodDeclaration            ::=
    (Attributes:Attributes; Whitespace?)?
    ReturnType:ReturnType; Whitespace
    Identifier:Name;
    WhitePaddingOpt<
    GenericHeader<
        '(' WhitePaddingOpt<
            FormalParameterList:Parameters;?>  
        ')'>> ';'                           ;
