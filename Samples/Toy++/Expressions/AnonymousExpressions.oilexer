#include "Expressions.oilexer";

LambdaExpression                          ::= 
    AnonymousFunctionSignature:Signature; 
    WhitePaddingOpt<"=>">
    AnonymousFunctionBody:Body;             ;

AnonymousMethodExpression                 ::=
    "delegate" Whitespace
    ExplicitAnonymousFunctionSignature:Signature;?
    Whitespace? Block:Body;                 ;

AnonymousFunctionSignature               ::=>
    ExplicitAnonymousFunctionSignature      |
    ImplicitAnonymousFunctionSignature      ;

AnonymousFunctionBody                    ::=>
    Expression                              | 
    Block                                   ;

ExplicitAnonymousFunctionSignature      ::=
    '(' 
        WhitePaddingOpt<
        WhitespaceDelimitedList<ExplicitAnonymousFunctionParameter:Parameters;, ','>?>
    ')';

ExplicitAnonymousFunctionParameter        ::=
    ("ref" | "out"):Modifier;? Whitespace Type:Type;
    Whitespace Identifier:Name;             ;

ImplicitAnonymousFunctionSignature       ::=>
    Identifier                              |
    ImplicitAnonymousFunctionParameterList  ;

ImplicitAnonymousFunctionParameterList    ::=
    '(' 
        WhitePaddingOpt<
            WhitespaceDelimitedList<
                Identifier:Names;, ','>?>
     ')';

AnonymousObjectCreationExpression         ::=
    WhitePaddingOpt<"new"> 
    AnonymousObjectInitializer:Type;        ;

AnonymousObjectInitializer                ::=
    '{'
        Whitespace?
        (
            WhitespaceDelimitedList<MemberDeclarator:Members;, ','>
            WhitePaddingOpt<','>?
        )?
    '}';

MemberDeclarator                         ::=>
    SimpleName                              |
    MemberAccess                            |
    MemberAssignmentDeclarator              ;

MemberAssignmentDeclarator                ::=
    Identifier:Name; WhitePaddingOpt<'='> Expression:Value;  ;
