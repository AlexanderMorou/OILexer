#LexerName                     "ToyTokenizer";
#ParserName                       "ToyParser";
#AssemblyName                     "ToyReader";
#GrammarName                          "T*y++";
#TokenPrefix                            "TPP";
#TokenSuffix                          "Token";
#RulePrefix                             "TPP";
#RuleSuffix                            "Rule";
#Root                          "AssemblyPart";
#Namespace "AllenCopeland.Abstraction.Slf.Languages.ToyPP";

#include                 "Attributes.oilexer";
#include           "GeneralTemplates.oilexer";
#include                  "Namespace.oilexer";
#include   "Expressions\\Expressions.oilexer";
#include "Lexical Grammar\\ToyTokens.oilexer";
#include           "Members\\Members.oilexer";
#include     "Statements\\Statements.oilexer";
#include               "Types\\Types.oilexer";
#include         "Language\\Language.oilexer";
#include       "Templates\\Templates.oilexer";

#ifndef Lexer
#define Lexer = ToyParser;
#endif

ExternAliasDirective                       ::=
    "extern" "alias" Identifier:AliasName;   ;

UsingDirective                            ::=>
    UsingAliasDirective                      |
    UsingNamespaceDirective                  ;

UsingAliasDirective                        ::=
    "using" Identifier:Alias; '=' 
        NamespaceOrTypeName:Target;          ;

UsingNamespaceDirective                    ::=
    "using" NamespaceName:Target;            ;

NamespaceOrTypeName                        ::=
    (
        QualifiedAliasMember:AliasPart;      |
        SimpleName:Names;
    ) ('.' SimpleName:Names;)*               ;

AssemblyPart                               ::=
    ExternAliasDirective:Externs;*
    UsingDirective:Usings;*
    GlobalAttributes:Attributes;?
    NamespaceMemberDeclaration:Members;*     ;
