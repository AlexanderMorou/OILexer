#include                      "Root.oilexer";

TypeParameterList                         ::=
    '<' DelimitedList<TypeParameter:Items;, ','> '>';

TypeParameterConstraints                  ::=
    TypeParameterConstraint:Items;+;

TypeParameterConstraint                   ::=
    "where" TypeParameter:Parameter; 
        (
            TypeParameterConstraintCommon<>?
            TypeParameterBodyDefinition<>   |
            TypeParameterConstraintCommon<>    
        )                                   ;

TypeParameterConstraintCommon<_>          ::=
    ':' 
    (
        (
            "class"                         | 
            "struct"
        ):PrimaryConstraint; 
        (
            ',' DelimitedList<Type:BaseTypes;, ','>
        )?
        (
            ',' "new"!:HasNew; '(' ')'
        )?                                  |
        DelimitedList<Type:BaseTypes;, ','>
        (
            ',' "new"!:HasNew; '(' ')'
        )?                                  |
        "new"!:HasNew; '(' ')'
    );

/* *
 * Standard C# convention uses '{' to delimit
 * entity boundaries; however, in this instance
 * '[' and ']' are more appropriate for backwards
 * compatability with actual C# code.
 * */
TypeParameterBodyDefinition<_>            ::=
    '['
        TypeParameterMemberDeclaration:Members;+
    ']';