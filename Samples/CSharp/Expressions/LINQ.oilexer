#include "Root.oilexer";

QueryExpression                           ::=
    FromClause:SourceSelector;
    QueryBody:Body;                         ;

FromClause                                ::=
    "from" Type:RangeType;? 
    Identifier:RangeName; "in"
    Expression:Source;                      ;

QueryBody                                 ::=
    QueryBodyClause:Clauses;*
    SelectOrGroupClause:Selection;
    QueryContinuation:Next;?                ;

QueryBodyClause                          ::=>
    FromClause                              |
    LetClause                               |
    WhereClause                             |
    JoinClause                              |
    OrderByClause                           ;

LetClause                                 ::=
    "let" Identifier:RangeName; '='
    Expression:Value;                       ;

WhereClause                               ::=
    "where" BooleanExpression:Condition;    ;

JoinClause                                ::=
    "join" Type:RangeType;? 
    Identifier:RangeName; "in"
    Expression:Source; "on"
    Expression:ConditionLeft; "equals"
    Expression:ConditionRight;
    ("into" Identifier:RangeTarget;)?       ;

OrderByClause                             ::=
    "orderby" 
    DelimitedList<Ordering:Orderings;, ','> ;

Ordering                                  ::=
    Expression:OrderSelector; 
    ("ascending" | "descending"):Direction;?;

SelectOrGroupClause                      ::=>
    SelectClause                            |
    GroupClause                             ;

SelectClause                              ::=
    "select" Expression:Selection;          ;

GroupClause                               ::=
    "group" Expression:Selection; "by"
    Expression:Key;                         ;

QueryContinuation                         ::=
    "into" Identifier:RangeTarget; 
    QueryBody:Body;                         ;
